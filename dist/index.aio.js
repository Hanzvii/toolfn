!function(r,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((r="undefined"!=typeof globalThis?globalThis:r||self).toolfn={})}(this,(function(r){"use strict";const t=(r,t=Boolean)=>{if("[object Array]"!=Object.prototype.toString.call(r))throw new Error("TypeError: first param must be Array");return r.every(t)},e=r=>{if("[object Array]"!=Object.prototype.toString.call(r))throw new Error("TypeError: param must be Array");return r.every((t=>t===r[0]))},o=(r,t=",")=>{if("[object Array]"!=Object.prototype.toString.call(r))throw new Error("TypeError: first param must be Array");if("[object String]"!=Object.prototype.toString.call(t))throw new Error("TypeError: second param must be String");return r.map((r=>r.map((r=>`"${r}"`)).join(t))).join("\n")},a=(r,t)=>{if("[object Array]"!=Object.prototype.toString.call(r))throw new Error("TypeError: first param must be Array");return t instanceof Function?r.map(t).reduce(((r,t)=>r+t),0)/r.length:r.map((r=>r[t])).reduce(((r,t)=>r+t),0)/r.length},n=(r,t)=>{if("[object Array]"!=Object.prototype.toString.call(r))throw new Error("TypeError: first param must be Array");return r.reduce(((r,e,o)=>(r[t[o]?0:1].push(e),r)),[[],[]])},c=r=>Array.isArray(r)?r:[r],p=r=>{if("[object Array]"!=Object.prototype.toString.call(r))throw new Error("TypeError: param must be Array");return r.filter(Boolean)},i=(r,t)=>{if("[object Array]"!=Object.prototype.toString.call(r))throw new Error("TypeError: first param must be Array");return r.reduce(((r,e)=>e===t?r+1:r),0)},y=r=>{if("[object Array]"!=Object.prototype.toString.call(r))throw new Error("TypeError: param must be Array");return[].concat(...r.map((r=>Array.isArray(r)?y(r):r)))},l=(r,t,e)=>{if("[object Array]"!=Object.prototype.toString.call(r))throw new Error("TypeError: first param must be Array");if("[object Array]"!=Object.prototype.toString.call(t))throw new Error("TypeError: second param must be Array");let o;return"function"==typeof e?(o=new Set(t.map(e)),r.filter((r=>!o.has(e(r))))):(o=new Set(t),r.filter((r=>!o.has(r))))},b=(r,t)=>{if("[object Array]"!=Object.prototype.toString.call(r))throw new Error("TypeError: first param must be Array");for(;r.length>0&&!t(r[0]);)r=r.slice(1);return r},s=(r,t=1)=>{if("[object Array]"!=Object.prototype.toString.call(r))throw new Error("TypeError: first param must be Array");if("[object Number]"!=Object.prototype.toString.call(t))throw new Error("TypeError: second param must be Number");return r.reduce(((r,e)=>r.concat(t>1&&Array.isArray(e)?s(e,t-1):e)),[])},m=(r,t)=>{if("[object Array]"!=Object.prototype.toString.call(r))throw new Error("TypeError: first param must be Array");return r.reduce(((r,e,o)=>e===t?[...r,o]:r),[])},f=(r,t)=>{if("[object Array]"!=Object.prototype.toString.call(r))throw new Error("TypeError: first param must be Array");if("[object Array]"!=Object.prototype.toString.call(t))throw new Error("TypeError: second param must be Array");const e=new Set(t);return r.filter((r=>e.has(r)))},u=(r,t,e)=>{if("[object Array]"!=Object.prototype.toString.call(r))throw new Error("TypeError: first param must be Array");if("[object Array]"!=Object.prototype.toString.call(t))throw new Error("TypeError: second param must be Array");if("[object Function]"!=Object.prototype.toString.call(e))throw new Error("TypeError: third param must be Function");const o=new Set(t.map(e));return r.filter((r=>o.has(e(r))))},j=r=>{if("[object Array]"!=Object.prototype.toString.call(r))throw new Error("TypeError: param must be Array");return r[Math.floor(Math.random()*r.length)]},w=(r,t=1)=>{if("[object Array]"!=Object.prototype.toString.call(r))throw new Error("TypeError: first param must be Array");if("[object Number]"!=Object.prototype.toString.call(t))throw new Error("TypeError: second param must be Number");let e=r.length;for(;e;){const t=Math.floor(Math.random()*e--);[r[e],r[t]]=[r[t],r[e]]}return r.slice(0,t)},h=r=>{if("[object Array]"!=Object.prototype.toString.call(r))throw new Error("TypeError: param must be Array");let t=r.length;for(;t;){const e=Math.floor(Math.random()*t--);[r[t],r[e]]=[r[e],r[t]]}return r},E=(r,t=1)=>[...r].sort(((r,t)=>r-t)).slice(0,t);var A={all:t,allEqual:e,arrayToCSV:o,averageBy:a,bifurcate:n,castArray:c,compact:p,countOccurrences:i,deepFlatten:y,difference:l,dropWhile:b,flatten:s,indexOfAll:m,intersection:f,intersectionBy:u,randomIntArrayInRange:(r,t,e=1)=>{if("[object Number]"!=Object.prototype.toString.call(r))throw new Error("TypeError: first param must be Number");if("[object Number]"!=Object.prototype.toString.call(t))throw new Error("TypeError: second param must be Number");if("[object Number]"!=Object.prototype.toString.call(e))throw new Error("TypeError: third param must be Number");return Array.from({length:e},(()=>Math.floor(Math.random()*(t-r+1))+r))},sample:j,sampleSize:w,shuffle:h,minN:E};let g=Object.assign(A);r.all=t,r.allEqual=e,r.arrayToCSV=o,r.averageBy=a,r.bifurcate=n,r.castArray=c,r.compact=p,r.countOccurrences=i,r.deepFlatten=y,r.default=g,r.difference=l,r.dropWhile=b,r.flatten=s,r.indexOfAll=m,r.intersection=f,r.intersectionBy=u,r.minN=E,r.sample=j,r.sampleSize=w,r.shuffle=h,Object.defineProperty(r,"__esModule",{value:!0})}));
